# -*- coding: utf-8 -*-
"""Atividade_EaD_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/112H9LnjAS4orM4UG2snp14B3nvuRaCqs
"""

#Função original

# Fatorial
#print('Entre com um número inteiro positivo: ')
#num = input()
#if num.isdigit():
# num = int(num)
#else:
# print('O valor deve ser inteiro positivo')
# quit()
#i = 1
#resultado = 1
#while i <= num:
# resultado = resultado * i
# i = i + 1
#print(str(num) + '! = ' + str(resultado))

# Questão 3)Função adaptada para uso de recursão:

# Fatorial
print('Entre com um número inteiro positivo: ')
num = input()
if num.isdigit():
 num = int(num)
else:
 print('O valor deve ser inteiro positivo')
 quit()
 
def fatorial(num):
  if(num > 1):
    return num * fatorial(num - 1)
  else:
    return 1;
  
print(str(num) + '! = ' + str(fatorial(num)))

# Questão 4)Função adaptada para uso de função range():

# Fatorial
print('Entre com um número inteiro positivo: ')
num = input()
if num.isdigit():
 num = int(num)
else:
 print('O valor deve ser inteiro positivo')
 quit()
resultado = 1
for x in range(1, num + 1):
 resultado = resultado * x

print(str(num) + '! = ' + str(resultado))

#Questão 5) A função isdigit() serve para verificar se o valor inserido como input é realmente um número inteiro.

#Questão 6) A instrução break serve para interromper um loop. Já a instrução continue serve para interromper um 
# determinado laço (seguindo uma condição) dentro de um loop.
# Fatorial
#print('Entre com um número inteiro positivo: ')
#num = input()
#if num.isdigit():
# num = int(num)
#else:
# print('O valor deve ser inteiro positivo')
# quit()
#i = 1
#resultado = 1
#while i <= num:
# resultado = resultado * i
# if(resultado < 0):
#  resultado = 1
#   continue
# if(i == 0):
#   break;
# i = i + 1
#print(str(num) + '! = ' + str(resultado))

#Questão 7)

def fibonacci():
  print('Entre com um número inteiro positivo: ')
  num = input()
  if num.isdigit():
    num = int(num)
  else:
    print('O valor deve ser inteiro positivo')
    quit()
  
  primNum = 0
  segNum = 1
  print("Os " + str(num) + " números de fibonacci são: ")
  print(primNum)
  while(num != 0):
    print(segNum)
    segNum = segNum + primNum
    primNum = segNum - primNum
    num = num - 1

fibonacci()